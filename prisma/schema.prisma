generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  fullname        String?
  email           String           @unique
  pass            String
  phone           String           @unique
  ico             String?
  businessName    String?
  businessId      String?
  taxId           String?
  address         Json?
  country         Json?
  mailName        String?
  mailAddress     String?
  comment         String?
  isVerifiedEmail Boolean?         @default(false)
  isVerifiedPhone Boolean?         @default(false)
  VirtualAddress  VirtualAddress[]
  Order           Order[]
}

model VirtualAddress {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  user         User?   @relation(fields: [userId], references: [id])
  userId       String  @db.ObjectId
  order        Order?  @relation(fields: [orderId], references: [id])
  orderId      String? @db.ObjectId
  tariff       String
  openDate     String?
  expireDate   String
  period       String
  proofUrl     String?
  contractUrl  String?
  businessName String
  businessId   String
  address      String
  Mail         Mail[]
}

model Mail {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  virtualAddress   VirtualAddress? @relation(fields: [virtualAddressId], references: [id])
  virtualAddressId String          @db.ObjectId
  history          Json?
  mailUrl          String?
  contentUrl       String?
  from             String?
  fromAddress      String?
  date             String?
  status           String?
}

model Order {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  number         String           @unique
  payed          Boolean          @default(false)
  user           User?            @relation(fields: [userId], references: [id])
  userId         String           @db.ObjectId
  type           String
  formData       Json?
  status         String?
  history        Json?
  date           String?
  VirtualAddress VirtualAddress[]
}

model Post {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  content         String
  publicationDate String
  slugUrl         String
  metaName        String
  metaKeywords    String
  metaDescription String
  metaHreflang    String
  canonicalUrl    String
  lang            String
  titleImgUrl     String?
}
